<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCADSAM0DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDq6KKK+jPxIKKKKACiiigAooooAKKKKACiiigAooooAKKKKACi
        iigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooopAFFFFMAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKX61oeHdBvvE2rQ2OnQvLcOeCOg9yewpSlyasqEZVJc
        sFdlBVLttUEsewHNdJoPwx8U+IsGx0u4nQn720KB+dfUnw1/Z/0TwnDbXeoQLqWp7QWlkwUU+wr1iOFI
        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
</value>
  </data>
</root>